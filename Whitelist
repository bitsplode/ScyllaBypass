local function count()
	local Count = 0
	for i,v in next, getreg() do
		if typeof(v) == 'function' and is_synapse_function(v) and typeof(i) == 'string' and i:len() == 16 then
			Count = Count+ 1
		end
	end
	return Count
end
if count() == 28 then
	warn("nothing was executed before")
else
	game.Players.LocalPlayer:Kick("Please refrain from executing anything before using Engine4Cheating")
	while true do while true do while true do while true do while true do while true do while true do while true do while true do end end end end end end end end end
	return
end

local function getexploit()
	local exploit =
		(syn and not is_sirhurt_closure and not pebc_execute and "Synapse") or
		(secure_load and "Sentinel") or
		(is_sirhurt_closure and "Sirhurt") or
		(pebc_execute and "ProtoSmasher") or
		(KRNL_LOADED and "Krnl") or
		(WrapGlobal and "WeAreDevs") or
		(isvm and "Proxo") or
		(shadow_env and "Shadow") or
		(jit and "EasyExploits") or
		(getscriptenvs and "Calamari") or
		(unit and not syn and "Unit") or
		(OXYGEN_LOADED and "Oxygen U") or
		(IsElectron and "Electron") or
		("Unsupported")

	return exploit
end

local MessageBox = loadstring(game:HttpGet("https://raw.githubusercontent.com/bitsplode/ScyllaBypass/main/Messages"))()
local encryption = loadstring(game:HttpGet("https://raw.githubusercontent.com/bitsplode/Valkyrie/main/encryption.lua"))()
local hash = loadstring(game:HttpGet("https://raw.githubusercontent.com/bitsplode/Valkyrie/main/HashLib"))()

local httpService = game:GetService("HttpService")

if getexploit() ~= "Synapse" then
	game.Players.LocalPlayer:Kick("Unsupported exploit, Engine4Cheating is for Synapse X V2/V3 only!")
	while true do while true do while true do while true do while true do while true do while true do while true do while true do end end end end end end end end end
	return
end

local function getHWID()
	local http_request = syn.request;
	-- IP Would go like game:HttpGet("http://api.ipify.org")
	local body = http_request({Url = 'https://httpbin.org/get'; Method = 'GET'}).Body;
	local decoded = httpService:JSONDecode(body)
	local hwid = decoded.headers["Syn-Fingerprint"]
	return hwid
end

local function Write(name, data)
	writefile(name..'.json', data)
end

local function Load(name)
	if isfile(name..'.json') then
		return readfile(name..'.json')
	end
end

local getContents = Load("Engine4Cheating")
if getgenv().key == hash.sha256(getContents) then
	local saveHWID = getHWID()

	local dec;
	local s, e = pcall(function()
		dec = encryption.decrypt("3545cefe42af9e4f538f716987a4f82b3ceb0f70da1a02c557f67ba2ec52474a", getContents, 32, 4)
	end)

	if s then
		if dec then
			dec = httpService:JSONDecode(dec);
			if dec.Timestamp + (86400 * 3) > tick() and dec.HWID == saveHWID then
				MessageBox.Show({Position = UDim2.new(0.5,0,0.5,0), Text = "Expiry Date", Description = "Key expiry date: ".. os.date("%x", dec.Timestamp + (86400 * 3)) .. " " .. os.date("%X", dec.Timestamp + (86400 * 3)), MessageBoxIcon = "Question", MessageBoxButtons = "OK", Result = function(res)
					loadstring(game:HttpGet("https://raw.githubusercontent.com/bitsplode/ScyllaBypass/main/MainScript"))()
				end})
			elseif dec.Timestamp + (86400 * 3) < tick() then
				warn("Time on key expired")
			elseif dec.HWID ~= saveHWID then
				warn("Invalid Hardware ID")
			end
		end
	else
		warn("Error", e)
	end
else
	warn("Invalid key")
end
