wait(2)

syn.queue_on_teleport("loadstring(game:HttpGet('https://raw.githubusercontent.com/bitsplode/ScyllaBypass/main/SlaughterAutofarm'))()")

repeat wait()
until game.Players.LocalPlayer and game.Players.LocalPlayer.Character
local plr = game.Players.LocalPlayer
local char = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:wait()
local hump = char:WaitForChild("HumanoidRootPart")
local tps = game:GetService("TeleportService")

log = function(message, color, type)
	if type == "Note" then
		rconsoleprint("@@WHITE@@")rconsoleprint("[")rconsoleprint("@@LIGHT_BLUE@@")rconsoleprint("+")rconsoleprint("@@WHITE@@")rconsoleprint("] ")
		rconsoleprint(message.. "\n")
	elseif type == "Action" then
		rconsoleprint("@@WHITE@@")rconsoleprint("[")rconsoleprint("@@LIGHT_BLUE@@")rconsoleprint(">")rconsoleprint("@@WHITE@@")rconsoleprint("] ")
		rconsoleprint(message.. "\n")
	elseif type == "Input" then
		rconsoleprint("@@WHITE@@")rconsoleprint("[")rconsoleprint("@@LIGHT_BLUE@@")rconsoleprint("*")rconsoleprint("@@WHITE@@")rconsoleprint("] ")
		rconsoleprint(message)
		return rconsoleinput()
	elseif type == "Warn" then
		rconsoleprint("@@WHITE@@")rconsoleprint("[")rconsoleprint("@@RED@@")rconsoleprint("*")rconsoleprint("@@WHITE@@")rconsoleprint("] ")
		rconsoleprint("@@".. color:upper() .."@@")
		rconsoleprint(message.. "\n")
	else
		rconsoleprint("@@".. color:upper() .."@@")
		rconsoleprint(message.. "\n")
	end
end

if game.PlaceId ~= 6318874810 then
	wait(.5)
	log("Teleporting... please wait.", nil, "Note")
	game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("RequestTeleport"):FireServer(6318874810)

	warn("Teleporting")
else
	local uis = game:GetService("UserInputService")
	local crosses = game:GetService("Workspace").Objectives
	local collects = game:GetService("Workspace").Collect
	local check = plr.PlayerGui:WaitForChild("Slaught"):WaitForChild("Obj"):WaitForChild("List")
	local checkbut = plr.PlayerGui:WaitForChild("Menew"):WaitForChild("Main"):WaitForChild("Fake"):WaitForChild("ok")

	repeat wait()
	until checkbut.Visible == true
	local ded = "MouseButton1";
	local Target = game:GetService("ReplicatedStorage").Events.CoolNewRemote;
	Target:FireServer(ded);
	wait(.5)
	local string_1 = "TPC";
	local Target = game:GetService("ReplicatedStorage").Events.JoinTeam;
	Target:FireServer(ded);
	Target:FireServer(string_1);

	local stundastupid = coroutine.wrap(function()
		while wait() do
			game.ReplicatedStorage.Remotes.Stun:FireServer()
		end
	end)

	stundastupid()

	repeat
		for i, v in pairs(collects:GetChildren()) do
			if v:IsA("BasePart") then
				char:WaitForChild("Humanoid"):ChangeState(11)
				local tween = game:GetService("TweenService"):Create(hump,TweenInfo.new((hump.Position-v.Position).Magnitude/69420,Enum.EasingStyle.Quad), {CFrame = v.CFrame * CFrame.new(0,-5,0)})
				tween:Play()
				wait(.2)
				local Target = game:GetService("ReplicatedStorage").Remotes.Collect;
				Target:FireServer(v);
				wait(.1)
			end
		end
		log("Current Gas Collecting Status: "..check.Gas.Count.Text, "WHITE", "Warn")
		log("Current Tinder Collecting Status: "..check.Tinder.Count.Text, "WHITE", "Warn")
		wait(#collects:GetChildren()/7.3)
	until (check.Gas.Count.Text == "5/5" or check.Gas.Count.Text == "6/6" or check.Gas.Count.Text == "7/7" or check.Gas.Count.Text == "8/8" or check.Gas.Count.Text == "9/9") and (check.Tinder.Count.Text == "5/5" or check.Tinder.Count.Text == "6/6" or check.Tinder.Count.Text == "7/7" or check.Tinder.Count.Text == "8/8" or check.Tinder.Count.Text == "9/9")

	repeat
		for i, v in pairs(crosses:GetChildren()) do
			if v:IsA("BasePart") then
				char:WaitForChild("Humanoid"):ChangeState(11)
				local tween = game:GetService("TweenService"):Create(hump,TweenInfo.new((hump.Position-v.Position).Magnitude/69420,Enum.EasingStyle.Quad), {CFrame = v.CFrame * CFrame.new(0,-5,0)})
				tween:Play()
				wait(.2)
				local Target = game:GetService("ReplicatedStorage").Remotes.Gas;
				Target:FireServer(v);
				wait(.1)
			end
		end
		log("Current Gas Crossing Status: "..check.Gas_P.Count.Text, "WHITE", "Warn")
		log("Current Tinder Crossing Status: "..check.Tinder_P.Count.Text, "WHITE", "Warn")
		wait(#crosses:GetChildren()/7.3)
	until (check.Gas_P.Count.Text == "5/5" or check.Gas_P.Count.Text == "6/6" or check.Gas_P.Count.Text == "7/7" or check.Gas_P.Count.Text == "8/8" or check.Gas_P.Count.Text == "9/9") and (check.Tinder_P.Count.Text == "5/5" or check.Tinder_P.Count.Text == "6/6" or check.Tinder_P.Count.Text == "7/7" or check.Tinder_P.Count.Text == "8/8" or check.Tinder_P.Count.Text == "9/9")

	log("Switching lever...", nil, "Note")
	repeat
		local v = game:GetService("Workspace").Switch.Base
		local tween = game:GetService("TweenService"):Create(hump,TweenInfo.new((hump.Position-v.Position).Magnitude/69420,Enum.EasingStyle.Quad), {CFrame = v.CFrame * CFrame.new(0,-5,0)})
		tween:Play()
		local Target = game:GetService("ReplicatedStorage").Remotes.Lever;
		Target:FireServer();
		wait(.1)
	until not char

	log("Teleporting back... please wait.", nil, "Note")
end
