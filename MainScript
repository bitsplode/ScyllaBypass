local system = loadstring(game:HttpGet("https://raw.githubusercontent.com/bitsplode/ScyllaBypass/main/Menu"))()

local newMenu = system.menu()

newMenu.add({
	Name = "Murder III",
	Status = "Unknown",
	Changelog = [[Unpatched the exploit + added some more things]],
	Icon = 12549511436,
	ID = 8079848138,
	LoadingDelay = 2,
	Teleport = true,
	JustQueue = false,
	Source = [[
		local scylla = loadstring(game:HttpGet("https://raw.githubusercontent.com/bitsplode/ScyllaBypass/main/Library"))()

		local window = scylla.window("ScyllaBypass")
		local mainTab = window.tab("Main")
		local ESPTab = window.tab("ESP")
		local MiscTab = window.tab("Misc")

		-- Main

		mainTab.toggle("Autofarm", "Off", {"On", "Off"}, function()

		end)

		mainTab.toggle("Auto Item Unbox", "Off", {"On", "Off"}, function()

		end)

		mainTab.toggle("Item Box", "KnifeBox#1", {"KnifeBox#1", "GunBox#1"}, function()

		end)

		mainTab.toggle("Coin Autofarm", "Off", {"On", "Off"}, function()

		end)

		mainTab.toggle("Void Protection", "Off", {"On", "Off"}, function()

		end)

		mainTab.toggle("Switch Servers", "Off", {"On", "Off"}, function()

		end)

		mainTab.toggle("Fake Inventory", "Off", {"On", "Off"}, function()

		end)

		mainTab.toggle("Triggerbot", "Off", {"On", "Off"}, function()

		end)

		mainTab.toggle("Aimbot", "Off", {"On", "Off"}, function()

		end)

		mainTab.toggle("Silent Aim", "Off", {"On", "Off"}, function()

		end)

		mainTab.toggle("FOV + Visibility", "Off", {"On", "Off"}, function()

		end)

		mainTab.slider("FOV Circle", 1, {1, 350}, function()

		end)

		-- ESP Tab

		ESPTab.toggle("ESP", "Off", {"On", "Off"}, function()
			
		end)

		ESPTab.toggle("Show Players", "Off", {"On", "Off"}, function()

		end)

		ESPTab.toggle("Show Coins", "Off", {"On", "Off"}, function()

		end)

		ESPTab.toggle("Show Roles", "Off", {"On", "Off"}, function()

		end)

		ESPTab.toggle("Player Box", "Off", {"On", "Off"}, function()

		end)

		ESPTab.toggle("Player Name", "Off", {"On", "Off"}, function()

		end)

		ESPTab.toggle("Player Health", "Off", {"On", "Off"}, function()

		end)

		ESPTab.toggle("Player Distance", "Off", {"On", "Off"}, function()

		end)

		ESPTab.toggle("Player Distance", "Off", {"On", "Off"}, function()

		end)

		ESPTab.slider("Maximum Player Range", 100, {0, 1000}, function()

		end)

		ESPTab.toggle("Show dropped gun", "Off", {"On", "Off"}, function()

		end)

		-- Misc Tab

		MiscTab.toggle("Unlock Tool [RISKY]", "Off", {"On", "Off"}, function()
			
		end)

		MiscTab.toggle("Item", "DefaultKnife", {"DefaultKnife", "DefaultGun"}, function()

		end)

		MiscTab.toggle("Crosshair", "Off", {"On", "Off"}, function()

		end)

		MiscTab.toggle("Crosshair Type", "Cross", {"Cross", "Dot"}, function()

		end)

		MiscTab.slider("Crosshair Size", 5, {1, 100}, function()

		end)
	]],
	Private = false,
})

newMenu.add({
	Name = "Arsenal",
	Status = "Undetected",
	Changelog = [[[Added]: Silent Aim
		  [Added]: Headshot Percentage
		  [Added]: Wallbang Option
	]],
	Icon = 13050684635,
	ID = 286090429,
	LoadingDelay = 2,
	Teleport = true,
	JustQueue = false,
	Source = [[
		local scylla = loadstring(game:HttpGet("https://raw.githubusercontent.com/bitsplode/ScyllaBypass/main/Library"))()

		local window = scylla.window("ScyllaBypass")
		local mainTab = window.tab("Main")
		local ESPTab = window.tab("ESP")
		local MiscTab = window.tab("Misc")

		mainTab.toggle("Silent Aim", "Off", {"Off", "On"}, function()

		end)

		mainTab.toggle("Use Headshot Perc..", "Off", {"Off", "On"}, function()

		end)

		--mainTab.slider("Headshot Percentage", 50, {1, 100}, function(value)

		--end)

		mainTab.toggle("Silent Aim Wallbang", "Off", {"Off", "On"}, function(value)

		end)

		local CurrentCamera = workspace.CurrentCamera
		local Players = game.GetService(game, "Players")
		local LocalPlayer = Players.LocalPlayer
		local Mouse = LocalPlayer:GetMouse()
		function ClosestPlayer()
			local MaxDist, Closest = math.huge
			for I,V in pairs(Players.GetPlayers(Players)) do
				if V == LocalPlayer then continue end
				if V.Team == LocalPlayer then continue end
				if not V.Character then continue end
				local Head = V.Character.FindFirstChild(V.Character, "Head")
				if not Head then continue end
				local Pos, Vis = CurrentCamera.WorldToScreenPoint(CurrentCamera, Head.Position)
				if not Vis then continue end
				local MousePos, TheirPos = Vector2.new(Mouse.X, Mouse.Y), Vector2.new(Pos.X, Pos.Y)
				local Dist = (TheirPos - MousePos).Magnitude
				if Dist < MaxDist then
					MaxDist = Dist
					Closest = V
				end
			end
			return Closest
		end
		local MT = getrawmetatable(game)
		local OldNC = MT.__namecall
		local OldIDX = MT.__index
		setreadonly(MT, false)
		MT.__namecall = newcclosure(function(self, ...)
			local Args, Method = {...}, getnamecallmethod()
			if Method == "FindPartOnRayWithIgnoreList" and not checkcaller() then
				local CP = ClosestPlayer()
				if CP and CP.Character and CP.Character.FindFirstChild(CP.Character, "Head") then
					print("Yes", mainTab.getEnv("Silent Aim"))
					if mainTab.getEnv("Silent Aim") == true then
						local Rand = math.random(1, 100)
						print(mainTab.getEnv("Use Headshot Perc.."))
						if mainTab.getEnv("Use Headshot Perc..") == true then
							if Rand < 50 then-- mainTab.getEnv("Headshot Percentage")
								Args[1] = Ray.new(CurrentCamera.CFrame.Position, (CP.Character.Head.Position - CurrentCamera.CFrame.Position).Unit * 1000)
							elseif Rand >= 50 then --mainTab.getEnv("Headshot Percentage")
								Args[1] = Ray.new(CurrentCamera.CFrame.Position, (CP.Character.HumanoidRootPart.Position - CurrentCamera.CFrame.Position).Unit * 1000)
							end
						else
							Args[1] = Ray.new(CurrentCamera.CFrame.Position, (CP.Character.Head.Position - CurrentCamera.CFrame.Position).Unit * 1000)
						end
						return OldNC(self, unpack(Args))
					end
				end
			end
			return OldNC(self, ...)
		end)
		MT.__index = newcclosure(function(self, K)
			if K == "Clips" then
				if mainTab.getEnv("Silent Aim Wallbang") == true then
					return workspace.Map
				else
					return nil
				end
			end
			return OldIDX(self, K)
		end)
		setreadonly(MT, true)
	]],
	Private = false,
})

newMenu.add({
	Name = "Frontlines",
	Status = "Undetected",
	Changelog = [[[Added]: Silent Aim
		  [Added]: ESP
		  [Added]: Cheat Security
		
		  [NOTE]: This game is a beta feature of our Engine4Cheating product.
	]],
	Icon = 13050874197,
	ID = 5938036553,
	LoadingDelay = 2,
	Teleport = true,
	JustQueue = false,
	Source = [[
		while wait() do
			if game:IsLoaded() then
				break
			end
		end

		wait(15)

		local client; do
			for index, actor in pairs(getactors()) do
				task.wait(.5)
				if (actor.name == "frontlines_client_actor") then
					client = actor;
					break;
				end;
			end;
			assert(client ~= nil, "the client actor could not be acquired");
		end;
		--
		pcall(syn.run_on_actor, client, "local client = game.Players.LocalPlayer;local mouse = client:GetMouse();local camera = workspace.CurrentCamera;local point = camera.WorldToScreenPoint;local look = CFrame.lookAt;local environment = getrenv()._G;local globals; do wait(1) warn('yielding for global upload...');local tick = 0;while task.wait(5.5) do globals = rawget(environment, 'globals');if (globals) then break;end;tick += 1;if tick > 5 then client:Kick('globals under the actor state could not be fetched');break;end;end;end;local players = environment.PLAYER_COUNT;local characters = globals.soldier_models;local teams = globals.cli_teams;local id = globals.cli_state.fpv_sol_id;local espawn = environment.exe_set_t.FPV_SOL_BULLET_SPAWN;local function raycastWithIgnoreList(origin, direction, ignoreList)local raycastParams = RaycastParams.new()raycastParams.FilterType = Enum.RaycastFilterType.Blacklist raycastParams.FilterDescendantsInstances = ignoreList local result = workspace:Raycast(origin, direction, raycastParams) return result ~= nil end local function checkVisibility(endPoint, startPoint, ignoreList)local direction = endPoint - startPoint local distance = direction.Magnitude direction = direction.Unit local result = raycastWithIgnoreList(startPoint, direction * distance, ignoreList) return not result end local allCharacters = {}local hasHighlight = {}for index = 1, players do for index = 1, players do local character = characters[index];if (character and teams[index] ~= teams[id]) then local highlight = Instance.new('Highlight', game.CoreGui)highlight.Adornee = character table.insert(hasHighlight, {Character = character,Highlight = highlight,})print(highlight)end if character then table.insert(allCharacters, character)end end end spawn(function()while wait() do for i, v in pairs(hasHighlight) do local visible = checkVisibility(workspace.CurrentCamera.CFrame.Position, v.Character.PrimaryPart.Position, {})if (visible) then v.Highlight.FillColor = Color3.fromRGB(0, 255, 0)else v.Highlight.FillColor = Color3.fromRGB(255, 0, 0)end end end end)local function target()local range, target = math.huge; do for index = 1, players do local character = characters[index];if (character and teams[index] ~= teams[id]) then local part = character.PrimaryPart;local position, visible = point(camera, part.Position);if (visible) then local distance = Vector2.new((position.X - mouse.X), (position.Y - mouse.Y)).magnitude;if (distance < range) then range = distance;target = part;end;end;end;end;end;return target;end;local function discharge(level)for index, value in pairs(getstack(1 + level)) do if (type(value) == 'table' and type(rawget(value, 'fire_params')) == 'table') then return value;end;end;end;local exe; do local function proxy(event, ...)local arguments = {...};if (event == espawn) then local target, discharge = target(), discharge(3);if (target and discharge) then arguments[4] = (look(arguments[3], target.Position).lookVector * (discharge.fire_params.muzzle_velocity * discharge.fire_multipliers.muzzle_velocity));end;end;return exe(event, unpack(arguments));end;exe = replaceclosure(environment.exe_set, function(...)return proxy(...);end);end;warn('script initiated under the actor state');");
		--
		warn("script initiated under the local state");
	]],
	Private = false,
})

newMenu.add({
	Name = "Queue Testing",
	Status = "Undetected",
	Changelog = [[]],
	Icon = 12549511436,
	ID = 8079848138,
	LoadingDelay = 2,
	Teleport = false,
	JustQueue = true,
	Source = [[print("Hello Wordl!)]],
	Private = true,
})
